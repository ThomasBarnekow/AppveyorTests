environment:
  matrix:
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PERFORM_CODE_INSPECTION: yes
    PERFORM_TEST: no
    PERFORM_PUBLISH_STEP: no
  - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    PERFORM_CODE_INSPECTION: no
    PERFORM_TEST: yes
    PERFORM_PUBLISH_STEP: no
  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PERFORM_CODE_INSPECTION: no
    PERFORM_TEST: yes
    PERFORM_PUBLISH_STEP: yes

before_build:
- pwsh: |
    Write-Host "Image = $Env:APPVEYOR_BUILD_WORKER_IMAGE`n"
    
    Write-Host "PERFORM_CODE_INSPECTION = $Env:PERFORM_CODE_INSPECTION"
    Write-Host "PERFORM_TEST = $Env:PERFORM_TEST"
    Write-Host "PERFORM_PUBLISH_STEP = $Env:PERFORM_PUBLISH_STEP`n"
    
    if ($Env:PERFORM_CODE_INSPECTION -eq "yes") {
      Write-Host "RunInspectCode function EXECUTED"
      Write-Host "RunCleanupCode function EXECUTED"
    }
    else {
      Write-Host "RunInspectCode function SKIPPED"
      Write-Host "RunCleanupCode function SKIPPED"
    }

build_script:
- pwsh: |
    Write-Host "BUILD PHASE`n"
    
    Write-Host "dotnet tool restore EXECUTED"
    Write-Host "dotnet build EXECUTED"
    
    if ($Env:PERFORM_TEST -eq "yes") {
      Write-Host "dotnet test EXECUTED"
    }
    else {
      Write-Host "dotnet test SKIPPED"
    }

after_build:
- pwsh: |
    Write-Host "After-Build Phase`n"
    
    if ($Env:PERFORM_PUBLISH_STEP -eq "yes") {
      Write-Host "Documentation PUBLISHED"
      Write-Host "NuGet package PUBLISHED"
    }
    else {
      Write-Host "Documentation NOT published"
      Write-Host "NuGet package NOT published"
    }

test: off
